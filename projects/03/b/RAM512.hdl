// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in=load,
             sel[0]=address[6], sel[1]=address[7], sel[2]=address[8],
             a=r0, b=r1, c=r2, d=r3, e=r4, f=r5, g=r6, h=r7);

    RAM64(in=in, load=r0,
          address[0]=address[0], address[1]=address[1], address[2]=address[2],
          address[3]=address[3], address[4]=address[4], address[5]=address[5],
          out=RV0);
    RAM64(in=in, load=r1,
          address[0]=address[0], address[1]=address[1], address[2]=address[2],
          address[3]=address[3], address[4]=address[4], address[5]=address[5],
          out=RV1);
    RAM64(in=in, load=r2,
          address[0]=address[0], address[1]=address[1], address[2]=address[2],
          address[3]=address[3], address[4]=address[4], address[5]=address[5],
          out=RV2);
    RAM64(in=in, load=r3,
          address[0]=address[0], address[1]=address[1], address[2]=address[2],
          address[3]=address[3], address[4]=address[4], address[5]=address[5],
          out=RV3);
    RAM64(in=in, load=r4,
          address[0]=address[0], address[1]=address[1], address[2]=address[2],
          address[3]=address[3], address[4]=address[4], address[5]=address[5],
          out=RV4);
    RAM64(in=in, load=r5,
          address[0]=address[0], address[1]=address[1], address[2]=address[2],
          address[3]=address[3], address[4]=address[4], address[5]=address[5],
          out=RV5);
    RAM64(in=in, load=r6,
          address[0]=address[0], address[1]=address[1], address[2]=address[2],
          address[3]=address[3], address[4]=address[4], address[5]=address[5],
          out=RV6);
    RAM64(in=in, load=r7,
          address[0]=address[0], address[1]=address[1], address[2]=address[2],
          address[3]=address[3], address[4]=address[4], address[5]=address[5],
          out=RV7);

    Mux8Way16(a=RV0, b=RV1, c=RV2, d=RV3, e=RV4, f=RV5, g=RV6, h=RV7,
              sel[0]=address[6], sel[1]=address[7], sel[2]=address[8],
              out=out);
}
